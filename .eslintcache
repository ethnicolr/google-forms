[{"D:\\git\\google-forms\\src\\index.js":"1","D:\\git\\google-forms\\src\\reportWebVitals.js":"2","D:\\git\\google-forms\\src\\app\\App.js":"3","D:\\git\\google-forms\\src\\app\\QuestionItems.js":"4","D:\\git\\google-forms\\src\\app\\features\\question\\questionPage.js":"5","D:\\git\\google-forms\\src\\app\\features\\question\\questionTypeSelect.js":"6","D:\\git\\google-forms\\src\\app\\hooks\\useOnClickOutside.js":"7","D:\\git\\google-forms\\src\\app\\lib.js":"8","D:\\git\\google-forms\\src\\app\\Header.js":"9","D:\\git\\google-forms\\src\\app\\Container.js":"10","D:\\git\\google-forms\\src\\app\\features\\question\\questionTypeRange.js":"11","D:\\git\\google-forms\\src\\app\\features\\question\\questionTypeText.js":"12","D:\\git\\google-forms\\src\\app\\features\\question\\questionSwitch.js":"13","D:\\git\\google-forms\\src\\app\\features\\question\\questionHeading.js":"14","D:\\git\\google-forms\\src\\app\\features\\question\\questionParameters.js":"15","D:\\git\\google-forms\\src\\app\\features\\question\\questionTypeSelectItem.js":"16","D:\\git\\google-forms\\src\\app\\components\\Select.js":"17","D:\\git\\google-forms\\src\\app\\components\\Option.js":"18"},{"size":446,"mtime":1611748184308,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1611591833466,"results":"21","hashOfConfig":"20"},{"size":2048,"mtime":1612968456294,"results":"22","hashOfConfig":"20"},{"size":1035,"mtime":1612187904115,"results":"23","hashOfConfig":"20"},{"size":2617,"mtime":1612972206445,"results":"24","hashOfConfig":"20"},{"size":2525,"mtime":1612972373256,"results":"25","hashOfConfig":"20"},{"size":418,"mtime":1612688572513,"results":"26","hashOfConfig":"20"},{"size":1417,"mtime":1612949372659,"results":"27","hashOfConfig":"20"},{"size":1273,"mtime":1612883737677,"results":"28","hashOfConfig":"20"},{"size":1593,"mtime":1612955069150,"results":"29","hashOfConfig":"20"},{"size":1511,"mtime":1612887088733,"results":"30","hashOfConfig":"20"},{"size":597,"mtime":1612887114063,"results":"31","hashOfConfig":"20"},{"size":2686,"mtime":1612888681811,"results":"32","hashOfConfig":"20"},{"size":567,"mtime":1612954695026,"results":"33","hashOfConfig":"20"},{"size":1613,"mtime":1612972273726,"results":"34","hashOfConfig":"20"},{"size":1743,"mtime":1612887106914,"results":"35","hashOfConfig":"20"},{"size":1753,"mtime":1612888513819,"results":"36","hashOfConfig":"20"},{"size":433,"mtime":1612888884786,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"w2v8w3",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\git\\google-forms\\src\\index.js",[],["80","81"],"D:\\git\\google-forms\\src\\reportWebVitals.js",[],"D:\\git\\google-forms\\src\\app\\App.js",[],"D:\\git\\google-forms\\src\\app\\QuestionItems.js",["82","83","84"],"import React, { useState } from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport { nanoid } from 'nanoid'\r\nimport QuestionSelect from './features/question/questionSelect'\r\nimport QuestionRange from './features/question/questionRange'\r\nimport QuestionText from './features/question/questionText'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '70%',\r\n  },\r\n})\r\n\r\nexport default function QuestionItems({ typeItems }) {\r\n  const classes = useStyles()\r\n\r\n  function renderSwitch(item) {\r\n    const [type, mode] = item.split('-')\r\n\r\n    switch (type) {\r\n      case 'text':\r\n        return <QuestionText mode={mode} />\r\n      case 'range':\r\n        return <QuestionRange />\r\n      case 'select':\r\n        return <QuestionSelect mode={mode} grid={false} />\r\n      case 'grid':\r\n        return <QuestionSelect mode={mode} grid={true} />\r\n      default:\r\n        return null\r\n    }\r\n  }\r\n\r\n  return <div className={classes.root}>{renderSwitch(typeItems)}</div>\r\n}\r\n","D:\\git\\google-forms\\src\\app\\features\\question\\questionPage.js",["85","86","87","88"],"D:\\git\\google-forms\\src\\app\\features\\question\\questionTypeSelect.js",["89","90","91"],"D:\\git\\google-forms\\src\\app\\hooks\\useOnClickOutside.js",[],"D:\\git\\google-forms\\src\\app\\lib.js",[],"D:\\git\\google-forms\\src\\app\\Header.js",["92","93","94"],"D:\\git\\google-forms\\src\\app\\Container.js",["95","96","97","98","99","100"],"D:\\git\\google-forms\\src\\app\\features\\question\\questionTypeRange.js",["101","102","103"],"import React, { useState } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport FormHelperText from '@material-ui/core/FormHelperText'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport Select from '@material-ui/core/Select'\r\nimport { nanoid } from 'nanoid'\r\n\r\nexport default function QuestionTypeRange() {\r\n  const [range, setRagne] = useState({ from: 0, to: 10 })\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target\r\n\r\n    setRagne((range) => ({\r\n      ...range,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <FormControl>\r\n        <Select\r\n          labelId='demo-simple-select-label'\r\n          id='demo-simple-select'\r\n          value={range.from}\r\n          name='from'\r\n          onChange={handleChange}\r\n        >\r\n          <MenuItem value={0}>0</MenuItem>\r\n          <MenuItem value={1}>1</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n      -\r\n      <FormControl>\r\n        <Select\r\n          labelId='demo-simple-select-label'\r\n          id='demo-simple-select'\r\n          value={range.to}\r\n          name='to'\r\n          onChange={handleChange}\r\n        >\r\n          {Array.from({ length: 10 }, (_, i) => i + 1).map((value) => (\r\n            <MenuItem key={nanoid()} value={value}>\r\n              {value}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n    </div>\r\n  )\r\n}\r\n","D:\\git\\google-forms\\src\\app\\features\\question\\questionTypeText.js",["104","105"],"import React from 'react'\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nconst useStyles = makeStyles({\r\n  title: {\r\n    color: '#000',\r\n  },\r\n})\r\nexport default function QuestionTypeText({ mode }) {\r\n  const classes = useStyles()\r\n\r\n  let text\r\n  if (mode === 'paragraph') {\r\n    text = 'Long answer text'\r\n  }\r\n  if (mode === 'line') {\r\n    text = 'Short answer text'\r\n  }\r\n  return (\r\n    <div>\r\n      <h2 className={classes.title}>{text}</h2>\r\n    </div>\r\n  )\r\n}\r\n",["106","107"],"D:\\git\\google-forms\\src\\app\\features\\question\\questionSwitch.js",[],"D:\\git\\google-forms\\src\\app\\features\\question\\questionHeading.js",["108","109"],"D:\\git\\google-forms\\src\\app\\features\\question\\questionParameters.js",["110","111","112"],"D:\\git\\google-forms\\src\\app\\features\\question\\questionTypeSelectItem.js",["113","114"],"/** @jsxImportSource @emotion/react */\r\nimport { jsx } from '@emotion/react'\r\nimport React, { useEffect, useRef } from 'react'\r\nimport styled from '@emotion/styled'\r\nimport { useEditMod } from '../../Container'\r\n\r\n// import Input from '@material-ui/core/Input'\r\nimport { EditStripeInput } from '../../lib'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked'\r\n\r\nconst Input = styled.input`\r\n  padding: 0;\r\n  width: 100%;\r\n  heigt: 100%;\r\n  border: none;\r\n  outline: none;\r\n  padding: 15px 10px;\r\n  &:hover {\r\n    border-bottom: ${(props) =>\r\n      props.isEdit ? '1px solid rgba(0, 0, 0, 0.12)' : 'none'};\r\n  }\r\n`\r\n\r\nexport default function QuestionTypeSelectItem({\r\n  value,\r\n  onChange,\r\n  onDelete,\r\n  id,\r\n  type,\r\n}) {\r\n  const inputEl = useRef(null)\r\n  const { edit } = useEditMod()\r\n  const handleChange = (e) => {\r\n    onChange(id, e.target.value)\r\n  }\r\n  useEffect(() => {\r\n    inputEl.current.focus()\r\n    inputEl.current.select()\r\n  }, [])\r\n\r\n  return (\r\n    <div\r\n      css={{\r\n        width: '100%',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        position: 'relative',\r\n      }}\r\n    >\r\n      <RadioButtonUncheckedIcon color='disabled' />\r\n      <Input\r\n        ref={inputEl}\r\n        id='standard-basic'\r\n        name='title'\r\n        value={value}\r\n        onChange={handleChange}\r\n        isEdit={edit}\r\n        onFocus={(e) => e.target.select()}\r\n      />\r\n      {edit ? (\r\n        <IconButton aria-label='delete' onClick={() => onDelete(id)}>\r\n          <DeleteIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </div>\r\n  )\r\n}\r\n","D:\\git\\google-forms\\src\\app\\components\\Select.js",["115"],"D:\\git\\google-forms\\src\\app\\components\\Option.js",[],{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","severity":1,"message":"121","line":1,"column":17,"nodeType":"122","messageId":"123","endLine":1,"endColumn":25},{"ruleId":"120","severity":1,"message":"124","line":2,"column":8,"nodeType":"122","messageId":"123","endLine":2,"endColumn":14},{"ruleId":"120","severity":1,"message":"125","line":3,"column":10,"nodeType":"122","messageId":"123","endLine":3,"endColumn":16},{"ruleId":"120","severity":1,"message":"126","line":3,"column":8,"nodeType":"122","messageId":"123","endLine":3,"endColumn":26},{"ruleId":"120","severity":1,"message":"127","line":12,"column":10,"nodeType":"122","messageId":"123","endLine":12,"endColumn":11},{"ruleId":"120","severity":1,"message":"128","line":15,"column":10,"nodeType":"122","messageId":"123","endLine":15,"endColumn":22},{"ruleId":"120","severity":1,"message":"129","line":17,"column":9,"nodeType":"122","messageId":"123","endLine":17,"endColumn":21},{"ruleId":"120","severity":1,"message":"130","line":2,"column":10,"nodeType":"122","messageId":"123","endLine":2,"endColumn":13},{"ruleId":"120","severity":1,"message":"121","line":3,"column":17,"nodeType":"122","messageId":"123","endLine":3,"endColumn":25},{"ruleId":"120","severity":1,"message":"131","line":3,"column":50,"nodeType":"122","messageId":"123","endLine":3,"endColumn":60},{"ruleId":"120","severity":1,"message":"130","line":2,"column":10,"nodeType":"122","messageId":"123","endLine":2,"endColumn":13},{"ruleId":"120","severity":1,"message":"132","line":3,"column":17,"nodeType":"122","messageId":"123","endLine":3,"endColumn":26},{"ruleId":"120","severity":1,"message":"133","line":3,"column":38,"nodeType":"122","messageId":"123","endLine":3,"endColumn":44},{"ruleId":"120","severity":1,"message":"130","line":2,"column":10,"nodeType":"122","messageId":"123","endLine":2,"endColumn":13},{"ruleId":"120","severity":1,"message":"132","line":3,"column":17,"nodeType":"122","messageId":"123","endLine":3,"endColumn":26},{"ruleId":"120","severity":1,"message":"124","line":6,"column":3,"nodeType":"122","messageId":"123","endLine":6,"endColumn":9},{"ruleId":"120","severity":1,"message":"134","line":7,"column":3,"nodeType":"122","messageId":"123","endLine":7,"endColumn":11},{"ruleId":"120","severity":1,"message":"135","line":9,"column":3,"nodeType":"122","messageId":"123","endLine":9,"endColumn":17},{"ruleId":"120","severity":1,"message":"136","line":10,"column":3,"nodeType":"122","messageId":"123","endLine":10,"endColumn":18},{"ruleId":"120","severity":1,"message":"137","line":2,"column":10,"nodeType":"122","messageId":"123","endLine":2,"endColumn":20},{"ruleId":"120","severity":1,"message":"138","line":3,"column":8,"nodeType":"122","messageId":"123","endLine":3,"endColumn":18},{"ruleId":"120","severity":1,"message":"139","line":5,"column":8,"nodeType":"122","messageId":"123","endLine":5,"endColumn":22},{"ruleId":"120","severity":1,"message":"140","line":2,"column":8,"nodeType":"122","messageId":"123","endLine":2,"endColumn":24},{"ruleId":"120","severity":1,"message":"141","line":3,"column":8,"nodeType":"122","messageId":"123","endLine":3,"endColumn":17},{"ruleId":"116","replacedBy":"142"},{"ruleId":"118","replacedBy":"143"},{"ruleId":"120","severity":1,"message":"121","line":1,"column":17,"nodeType":"122","messageId":"123","endLine":1,"endColumn":25},{"ruleId":"120","severity":1,"message":"144","line":3,"column":10,"nodeType":"122","messageId":"123","endLine":3,"endColumn":22},{"ruleId":"120","severity":1,"message":"130","line":2,"column":10,"nodeType":"122","messageId":"123","endLine":2,"endColumn":13},{"ruleId":"120","severity":1,"message":"121","line":3,"column":17,"nodeType":"122","messageId":"123","endLine":3,"endColumn":25},{"ruleId":"120","severity":1,"message":"145","line":9,"column":7,"nodeType":"122","messageId":"123","endLine":9,"endColumn":19},{"ruleId":"120","severity":1,"message":"130","line":2,"column":10,"nodeType":"122","messageId":"123","endLine":2,"endColumn":13},{"ruleId":"120","severity":1,"message":"136","line":8,"column":10,"nodeType":"122","messageId":"123","endLine":8,"endColumn":25},{"ruleId":"120","severity":1,"message":"130","line":2,"column":10,"nodeType":"122","messageId":"123","endLine":2,"endColumn":13},"no-native-reassign",["146"],"no-negated-in-lhs",["147"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'nanoid' is defined but never used.","'QuestionTypeSelect' is defined but never used.","'_' is assigned a value but never used.","'typeQuestion' is assigned a value but never used.","'handleSelect' is assigned a value but never used.","'jsx' is defined but never used.","'useContext' is defined but never used.","'useEffect' is defined but never used.","'useRef' is defined but never used.","'Textarea' is defined but never used.","'ContainerField' is defined but never used.","'EditStripeInput' is defined but never used.","'makeStyles' is defined but never used.","'InputLabel' is defined but never used.","'FormHelperText' is defined but never used.","'TextareaAutosize' is defined but never used.","'TextField' is defined but never used.",["146"],["147"],"'TextareaGrey' is defined but never used.","'initialState' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]