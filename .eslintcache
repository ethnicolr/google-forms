[{"D:\\git\\google-forms\\src\\index.js":"1","D:\\git\\google-forms\\src\\reportWebVitals.js":"2","D:\\git\\google-forms\\src\\app\\App.js":"3","D:\\git\\google-forms\\src\\app\\QuestionItems.js":"4","D:\\git\\google-forms\\src\\app\\features\\question\\questionPage.js":"5","D:\\git\\google-forms\\src\\app\\features\\question\\qestionInput.js":"6","D:\\git\\google-forms\\src\\app\\features\\question\\qestionOption.js":"7","D:\\git\\google-forms\\src\\app\\features\\question\\qestionSelectItem.js":"8","D:\\git\\google-forms\\src\\app\\features\\question\\questionTypeSelect.js":"9","D:\\git\\google-forms\\src\\app\\features\\question\\questionSelect.js":"10","D:\\git\\google-forms\\src\\app\\features\\question\\questionRange.js":"11","D:\\git\\google-forms\\src\\app\\features\\question\\questionText.js":"12","D:\\git\\google-forms\\src\\app\\hooks\\useOnClickOutside.js":"13","D:\\git\\google-forms\\src\\app\\lib.js":"14","D:\\git\\google-forms\\src\\app\\Header.js":"15","D:\\git\\google-forms\\src\\app\\Container.js":"16"},{"size":446,"mtime":1611748184308,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":1611591833466,"results":"19","hashOfConfig":"18"},{"size":1373,"mtime":1612624710042,"results":"20","hashOfConfig":"18"},{"size":1035,"mtime":1612187904115,"results":"21","hashOfConfig":"18"},{"size":1274,"mtime":1612627674594,"results":"22","hashOfConfig":"18"},{"size":523,"mtime":1612626523984,"results":"23","hashOfConfig":"18"},{"size":1068,"mtime":1612191258647,"results":"24","hashOfConfig":"18"},{"size":993,"mtime":1612378610194,"results":"25","hashOfConfig":"18"},{"size":1464,"mtime":1612189464061,"results":"26","hashOfConfig":"18"},{"size":2507,"mtime":1612447744823,"results":"27","hashOfConfig":"18"},{"size":1507,"mtime":1611840832982,"results":"28","hashOfConfig":"18"},{"size":593,"mtime":1612202688567,"results":"29","hashOfConfig":"18"},{"size":445,"mtime":1612627809568,"results":"30","hashOfConfig":"18"},{"size":1139,"mtime":1612626678552,"results":"31","hashOfConfig":"18"},{"size":1310,"mtime":1612624779213,"results":"32","hashOfConfig":"18"},{"size":1493,"mtime":1612625427352,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"w2v8w3",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"51"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"51"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\git\\google-forms\\src\\index.js",[],["73","74"],"D:\\git\\google-forms\\src\\reportWebVitals.js",[],"D:\\git\\google-forms\\src\\app\\App.js",[],"D:\\git\\google-forms\\src\\app\\QuestionItems.js",["75","76","77"],"import React, { useState } from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport { nanoid } from 'nanoid'\r\nimport QuestionSelect from './features/question/questionSelect'\r\nimport QuestionRange from './features/question/questionRange'\r\nimport QuestionText from './features/question/questionText'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '70%',\r\n  },\r\n})\r\n\r\nexport default function QuestionItems({ typeItems }) {\r\n  const classes = useStyles()\r\n\r\n  function renderSwitch(item) {\r\n    const [type, mode] = item.split('-')\r\n\r\n    switch (type) {\r\n      case 'text':\r\n        return <QuestionText mode={mode} />\r\n      case 'range':\r\n        return <QuestionRange />\r\n      case 'select':\r\n        return <QuestionSelect mode={mode} grid={false} />\r\n      case 'grid':\r\n        return <QuestionSelect mode={mode} grid={true} />\r\n      default:\r\n        return null\r\n    }\r\n  }\r\n\r\n  return <div className={classes.root}>{renderSwitch(typeItems)}</div>\r\n}\r\n","D:\\git\\google-forms\\src\\app\\features\\question\\questionPage.js",["78"],"D:\\git\\google-forms\\src\\app\\features\\question\\qestionInput.js",["79","80"],"D:\\git\\google-forms\\src\\app\\features\\question\\qestionOption.js",["81","82","83","84","85"],"import React, { useState } from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport QiestionInput from './qestionSelectItem'\r\nimport { nanoid } from 'nanoid'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport QuestionSelect from './questionSelect'\r\nimport QuestionRange from './questionRange'\r\nimport QuestionText from './questionText'\r\n\r\nconst initialState = [{ value: 'Вариант 1', id: nanoid() }]\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    marginTop: '20px',\r\n  },\r\n})\r\nexport default function QestionOption({ typeItems }) {\r\n  const classes = useStyles()\r\n  function renderSwitch(item) {\r\n    const [type, mode] = item.split('-')\r\n\r\n    switch (type) {\r\n      case 'text':\r\n        return <QuestionText mode={mode} />\r\n      case 'range':\r\n        return <QuestionRange />\r\n      case 'select':\r\n        return <QuestionSelect mode={mode} grid={false} />\r\n      case 'grid':\r\n        return <QuestionSelect mode={mode} grid={true} />\r\n      default:\r\n        return null\r\n    }\r\n  }\r\n\r\n  return <>{renderSwitch(typeItems)}</>\r\n}\r\n",["86","87"],"D:\\git\\google-forms\\src\\app\\features\\question\\qestionSelectItem.js",[],"D:\\git\\google-forms\\src\\app\\features\\question\\questionTypeSelect.js",[],"D:\\git\\google-forms\\src\\app\\features\\question\\questionSelect.js",["88","89","90","91"],"import React, { useState, useEffect, useReducer, useContext } from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked'\r\nimport { nanoid } from 'nanoid'\r\nimport QestionSelectItem from './qestionSelectItem'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport { StateContex } from './../../App'\r\n\r\nconst useStyles = makeStyles({\r\n  items: {\r\n    margin: 0,\r\n    padding: 0,\r\n    listStyle: 'none',\r\n    marginBottom: '20px',\r\n  },\r\n  item: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    width: '100%',\r\n  },\r\n  input: {\r\n    width: '100%',\r\n    marginLeft: '10px',\r\n  },\r\n  icon: {\r\n    paddingTop: '5px',\r\n  },\r\n})\r\n\r\nfunction selectReducer(state, action) {\r\n  switch (action.type) {\r\n    case 'create': {\r\n      return [...state, { value: `Вариант ${state.length + 1}`, id: nanoid() }]\r\n    }\r\n\r\n    case 'delete': {\r\n      console.log(action)\r\n      return state.filter((item) => item.id !== action.id)\r\n    }\r\n\r\n    case 'edit': {\r\n      console.log(action)\r\n      return state.map((item) => {\r\n        if (item.id === action.id) {\r\n          return { ...item, value: action.value }\r\n        }\r\n        return item\r\n      })\r\n    }\r\n    default:\r\n      break\r\n  }\r\n}\r\nexport default function QestionSelect({ mode, grid }) {\r\n  const [state, dispatch] = useReducer(selectReducer, [\r\n    { value: 'Вариант 1', id: nanoid() },\r\n  ])\r\n  const classes = useStyles()\r\n\r\n  const addItem = () => dispatch({ type: 'create' })\r\n  const deleteItem = (id) => dispatch({ type: 'delete', id })\r\n  const editItem = (id, value) => dispatch({ type: 'edit', value, id })\r\n  const [updateItem] = useContext(StateContex)\r\n  console.log(updateItem)\r\n  useEffect(() => {\r\n    console.log('update')\r\n  }, [state])\r\n\r\n  return (\r\n    <>\r\n      <ul className={classes.items}>\r\n        {state.map((elem) => {\r\n          return (\r\n            <li className={classes.item} key={elem.id}>\r\n              <QestionSelectItem\r\n                initValue={elem.value}\r\n                id={elem.id}\r\n                onChange={editItem}\r\n                onDelete={deleteItem}\r\n                value={elem.value}\r\n              />\r\n            </li>\r\n          )\r\n        })}\r\n      </ul>\r\n      <Button variant='contained' onClick={addItem}>\r\n        Добавить вариант\r\n      </Button>\r\n    </>\r\n  )\r\n}\r\n","D:\\git\\google-forms\\src\\app\\features\\question\\questionRange.js",["92","93","94"],"import React, { useState } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport FormHelperText from '@material-ui/core/FormHelperText'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport Select from '@material-ui/core/Select'\r\nimport { nanoid } from 'nanoid'\r\n\r\nexport default function QuestionRange() {\r\n  const [range, setRagne] = useState({ from: 0, to: 10 })\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target\r\n\r\n    setRagne((range) => ({\r\n      ...range,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <FormControl>\r\n        <Select\r\n          labelId='demo-simple-select-label'\r\n          id='demo-simple-select'\r\n          value={range.from}\r\n          name='from'\r\n          onChange={handleChange}\r\n        >\r\n          <MenuItem value={0}>0</MenuItem>\r\n          <MenuItem value={1}>1</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n      -\r\n      <FormControl>\r\n        <Select\r\n          labelId='demo-simple-select-label'\r\n          id='demo-simple-select'\r\n          value={range.to}\r\n          name='to'\r\n          onChange={handleChange}\r\n        >\r\n          {Array.from({ length: 10 }, (_, i) => i + 1).map((value) => (\r\n            <MenuItem key={nanoid()} value={value}>\r\n              {value}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n    </div>\r\n  )\r\n}\r\n","D:\\git\\google-forms\\src\\app\\features\\question\\questionText.js",["95","96"],"import React from 'react'\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nconst useStyles = makeStyles({\r\n  title: {\r\n    color: '#000',\r\n  },\r\n})\r\nexport default function QuestionText({ mode }) {\r\n  const classes = useStyles()\r\n\r\n  let text\r\n  if (mode === 'paragraph') {\r\n    text = 'Long answer text'\r\n  }\r\n  if (mode === 'line') {\r\n    text = 'Short answer text'\r\n  }\r\n  return (\r\n    <div>\r\n      <h2 className={classes.title}>{text}</h2>\r\n    </div>\r\n  )\r\n}\r\n","D:\\git\\google-forms\\src\\app\\hooks\\useOnClickOutside.js",[],"D:\\git\\google-forms\\src\\app\\lib.js",[],"D:\\git\\google-forms\\src\\app\\Header.js",["97","98","99","100","101"],"D:\\git\\google-forms\\src\\app\\Container.js",["102","103","104","105","106","107"],{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":1,"column":17,"nodeType":"114","messageId":"115","endLine":1,"endColumn":25},{"ruleId":"112","severity":1,"message":"116","line":2,"column":8,"nodeType":"114","messageId":"115","endLine":2,"endColumn":14},{"ruleId":"112","severity":1,"message":"117","line":3,"column":10,"nodeType":"114","messageId":"115","endLine":3,"endColumn":16},{"ruleId":"112","severity":1,"message":"118","line":1,"column":27,"nodeType":"114","messageId":"115","endLine":1,"endColumn":33},{"ruleId":"112","severity":1,"message":"113","line":1,"column":17,"nodeType":"114","messageId":"115","endLine":1,"endColumn":25},{"ruleId":"112","severity":1,"message":"119","line":3,"column":10,"nodeType":"114","messageId":"115","endLine":3,"endColumn":22},{"ruleId":"112","severity":1,"message":"113","line":1,"column":17,"nodeType":"114","messageId":"115","endLine":1,"endColumn":25},{"ruleId":"112","severity":1,"message":"116","line":2,"column":8,"nodeType":"114","messageId":"115","endLine":2,"endColumn":14},{"ruleId":"112","severity":1,"message":"120","line":3,"column":8,"nodeType":"114","messageId":"115","endLine":3,"endColumn":21},{"ruleId":"112","severity":1,"message":"121","line":10,"column":7,"nodeType":"114","messageId":"115","endLine":10,"endColumn":19},{"ruleId":"112","severity":1,"message":"122","line":17,"column":9,"nodeType":"114","messageId":"115","endLine":17,"endColumn":16},{"ruleId":"108","replacedBy":"123"},{"ruleId":"110","replacedBy":"124"},{"ruleId":"112","severity":1,"message":"113","line":1,"column":17,"nodeType":"114","messageId":"115","endLine":1,"endColumn":25},{"ruleId":"112","severity":1,"message":"125","line":4,"column":8,"nodeType":"114","messageId":"115","endLine":4,"endColumn":32},{"ruleId":"112","severity":1,"message":"126","line":7,"column":8,"nodeType":"114","messageId":"115","endLine":7,"endColumn":18},{"ruleId":"112","severity":1,"message":"127","line":8,"column":8,"nodeType":"114","messageId":"115","endLine":8,"endColumn":18},{"ruleId":"112","severity":1,"message":"128","line":2,"column":10,"nodeType":"114","messageId":"115","endLine":2,"endColumn":20},{"ruleId":"112","severity":1,"message":"129","line":3,"column":8,"nodeType":"114","messageId":"115","endLine":3,"endColumn":18},{"ruleId":"112","severity":1,"message":"130","line":5,"column":8,"nodeType":"114","messageId":"115","endLine":5,"endColumn":22},{"ruleId":"112","severity":1,"message":"131","line":2,"column":8,"nodeType":"114","messageId":"115","endLine":2,"endColumn":24},{"ruleId":"112","severity":1,"message":"132","line":3,"column":8,"nodeType":"114","messageId":"115","endLine":3,"endColumn":17},{"ruleId":"112","severity":1,"message":"133","line":2,"column":10,"nodeType":"114","messageId":"115","endLine":2,"endColumn":13},{"ruleId":"112","severity":1,"message":"134","line":3,"column":17,"nodeType":"114","messageId":"115","endLine":3,"endColumn":26},{"ruleId":"112","severity":1,"message":"118","line":3,"column":38,"nodeType":"114","messageId":"115","endLine":3,"endColumn":44},{"ruleId":"112","severity":1,"message":"135","line":4,"column":10,"nodeType":"114","messageId":"115","endLine":4,"endColumn":19},{"ruleId":"112","severity":1,"message":"136","line":5,"column":10,"nodeType":"114","messageId":"115","endLine":5,"endColumn":27},{"ruleId":"112","severity":1,"message":"133","line":2,"column":10,"nodeType":"114","messageId":"115","endLine":2,"endColumn":13},{"ruleId":"112","severity":1,"message":"134","line":3,"column":17,"nodeType":"114","messageId":"115","endLine":3,"endColumn":26},{"ruleId":"112","severity":1,"message":"116","line":6,"column":3,"nodeType":"114","messageId":"115","endLine":6,"endColumn":9},{"ruleId":"112","severity":1,"message":"137","line":7,"column":3,"nodeType":"114","messageId":"115","endLine":7,"endColumn":11},{"ruleId":"112","severity":1,"message":"138","line":9,"column":3,"nodeType":"114","messageId":"115","endLine":9,"endColumn":17},{"ruleId":"112","severity":1,"message":"139","line":10,"column":3,"nodeType":"114","messageId":"115","endLine":10,"endColumn":18},"no-native-reassign",["140"],"no-negated-in-lhs",["141"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'nanoid' is defined but never used.","'useRef' is defined but never used.","'TextareaGrey' is defined but never used.","'QiestionInput' is defined but never used.","'initialState' is assigned a value but never used.","'classes' is assigned a value but never used.",["140"],["141"],"'RadioButtonUncheckedIcon' is defined but never used.","'IconButton' is defined but never used.","'DeleteIcon' is defined but never used.","'makeStyles' is defined but never used.","'InputLabel' is defined but never used.","'FormHelperText' is defined but never used.","'TextareaAutosize' is defined but never used.","'TextField' is defined but never used.","'jsx' is defined but never used.","'useEffect' is defined but never used.","'Container' is defined but never used.","'useOnClickOutside' is defined but never used.","'Textarea' is defined but never used.","'ContainerField' is defined but never used.","'EditStripeInput' is defined but never used.","no-global-assign","no-unsafe-negation"]