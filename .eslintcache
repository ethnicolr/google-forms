[{"C:\\Front\\google-forms\\src\\index.js":"1","C:\\Front\\google-forms\\src\\reportWebVitals.js":"2","C:\\Front\\google-forms\\src\\app\\App.js":"3","C:\\Front\\google-forms\\src\\app\\hooks\\useLocalStorageState.js":"4","C:\\Front\\google-forms\\src\\app\\features\\question\\questionPage.js":"5","C:\\Front\\google-forms\\src\\app\\lib.js":"6","C:\\Front\\google-forms\\src\\app\\hooks\\useOnClickOutside.js":"7","C:\\Front\\google-forms\\src\\app\\features\\question\\questionTypeRender.js":"8","C:\\Front\\google-forms\\src\\app\\features\\question\\questionSwitch.js":"9","C:\\Front\\google-forms\\src\\app\\features\\question\\questionTypeSelect.js":"10","C:\\Front\\google-forms\\src\\app\\features\\question\\questionTypeRange.js":"11","C:\\Front\\google-forms\\src\\app\\features\\question\\questionTypeText.js":"12","C:\\Front\\google-forms\\src\\app\\components\\Select.js":"13","C:\\Front\\google-forms\\src\\app\\components\\Option.js":"14","C:\\Front\\google-forms\\src\\app\\assets\\icons.js":"15","C:\\Front\\google-forms\\src\\app\\features\\question\\questionTypeSelectItem.js":"16","C:\\Front\\google-forms\\src\\app\\hooks\\useSelectState.js":"17","C:\\Front\\google-forms\\src\\app\\features\\view\\viewFormPage.js":"18","C:\\Front\\google-forms\\src\\app\\features\\view\\viewFormGrid.js":"19","C:\\Front\\google-forms\\src\\app\\features\\question\\questionHead.js":"20","C:\\Front\\google-forms\\src\\app\\components\\Header.js":"21","C:\\Front\\google-forms\\src\\app\\components\\Container.js":"22","C:\\Front\\google-forms\\src\\app\\components\\Wrapper.js":"23","C:\\Front\\google-forms\\src\\app\\features\\question\\questionList.js":"24"},{"size":458,"mtime":1614504544179,"results":"25","hashOfConfig":"26"},{"size":375,"mtime":1614504544179,"results":"27","hashOfConfig":"26"},{"size":1695,"mtime":1615296268692,"results":"28","hashOfConfig":"26"},{"size":2976,"mtime":1614504544177,"results":"29","hashOfConfig":"26"},{"size":2617,"mtime":1615296560297,"results":"30","hashOfConfig":"26"},{"size":1901,"mtime":1614783457491,"results":"31","hashOfConfig":"26"},{"size":418,"mtime":1615552893135,"results":"32","hashOfConfig":"26"},{"size":1526,"mtime":1615568363983,"results":"33","hashOfConfig":"26"},{"size":1568,"mtime":1614540307160,"results":"34","hashOfConfig":"26"},{"size":3056,"mtime":1615568317556,"results":"35","hashOfConfig":"26"},{"size":1887,"mtime":1615557183700,"results":"36","hashOfConfig":"26"},{"size":548,"mtime":1615473971516,"results":"37","hashOfConfig":"26"},{"size":2468,"mtime":1615556232461,"results":"38","hashOfConfig":"26"},{"size":521,"mtime":1614504544173,"results":"39","hashOfConfig":"26"},{"size":17530,"mtime":1615552473336,"results":"40","hashOfConfig":"26"},{"size":2109,"mtime":1615567349126,"results":"41","hashOfConfig":"26"},{"size":1043,"mtime":1614527926155,"results":"42","hashOfConfig":"26"},{"size":1884,"mtime":1615296153943,"results":"43","hashOfConfig":"26"},{"size":1279,"mtime":1614773518542,"results":"44","hashOfConfig":"26"},{"size":911,"mtime":1615296153157,"results":"45","hashOfConfig":"26"},{"size":1473,"mtime":1615296130220,"results":"46","hashOfConfig":"26"},{"size":1106,"mtime":1615475264998,"results":"47","hashOfConfig":"26"},{"size":792,"mtime":1615552530345,"results":"48","hashOfConfig":"26"},{"size":506,"mtime":1615296656925,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"2k6uk2",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"C:\\Front\\google-forms\\src\\index.js",[],["105","106"],"C:\\Front\\google-forms\\src\\reportWebVitals.js",[],"C:\\Front\\google-forms\\src\\app\\App.js",[],"C:\\Front\\google-forms\\src\\app\\hooks\\useLocalStorageState.js",["107"],"import { useState, useEffect, useReducer, useCallback } from 'react'\r\nimport { nanoid } from 'nanoid'\r\n\r\nfunction stateReducer(state, action) {\r\n  switch (action.type) {\r\n    case 'ADD_QUESTION': {\r\n      const newQuestion = {\r\n        id: nanoid(),\r\n        title: '',\r\n        type: 'select-radio',\r\n        parameters: { items: [{ id: nanoid(), value: 'Вариант 1' }] },\r\n      }\r\n      return { ...state, questions: [...state.questions, newQuestion] }\r\n    }\r\n\r\n    case 'DELETE_QUESTION': {\r\n      const filterQuestions = state.questions.filter(\r\n        (question) => question.id !== action.payload\r\n      )\r\n      return { ...state, questions: filterQuestions }\r\n    }\r\n\r\n    case 'ClONE_QUESTION': {\r\n      const question = state.questions.find(\r\n        (question) => question.id === action.payload\r\n      )\r\n      const cloned = (question, newObj) => {\r\n        const keys = Object.keys(question)\r\n        return keys.reduce((result, key) => {\r\n          let value = question[key]\r\n          if (Array.isArray(value)) {\r\n            result[key] = cloned(value, [])\r\n          } else if (typeof value === 'object') {\r\n            result[key] = cloned(value, {})\r\n          }\r\n          if (key === 'id') {\r\n            result[key] = nanoid()\r\n          } else {\r\n            result[key] = value\r\n          }\r\n\r\n          return result\r\n        }, newObj)\r\n      }\r\n      let newQuestion = cloned(question, {})\r\n      return { ...state, questions: [...state.questions, newQuestion] }\r\n    }\r\n\r\n    case 'EDIT_QUESTION': {\r\n      const { question } = action.payload\r\n      return {\r\n        ...state,\r\n        questions: state.questions.map((elem) =>\r\n          elem.id === question.id ? question : elem\r\n        ),\r\n      }\r\n    }\r\n\r\n    case 'EDIT_HEADER': {\r\n      const [key, value] = action.payload\r\n      const header = { ...state.header, [key]: value }\r\n      return { ...state, header }\r\n    }\r\n\r\n    default:\r\n      break\r\n  }\r\n}\r\n\r\nexport function useLocalStorageState(key, defaultValue = {}) {\r\n  function init(defaultValue) {\r\n    return JSON.parse(window.localStorage.getItem(key)) || defaultValue\r\n  }\r\n  const [state, dispatch] = useReducer(stateReducer, defaultValue, init)\r\n\r\n  const addQuestion = () => dispatch({ type: 'ADD_QUESTION' })\r\n  const deleteQuestion = useCallback((id) => {\r\n    return dispatch({ type: 'DELETE_QUESTION', payload: id })\r\n  }, [])\r\n\r\n  const cloneQuestion = useCallback((id) => {\r\n    return dispatch({ type: 'ClONE_QUESTION', payload: id })\r\n  }, [])\r\n\r\n  const editQuestion = useCallback(\r\n    (question) => dispatch({ type: 'EDIT_QUESTION', payload: { question } }),\r\n    []\r\n  )\r\n  const editHeader = (key, value) =>\r\n    dispatch({ type: 'EDIT_HEADER', payload: [key, value] })\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem(key, JSON.stringify(state))\r\n  }, [key, state])\r\n\r\n  return {\r\n    state,\r\n    addQuestion,\r\n    editQuestion,\r\n    editHeader,\r\n    deleteQuestion,\r\n    cloneQuestion,\r\n  }\r\n}\r\n","C:\\Front\\google-forms\\src\\app\\features\\question\\questionPage.js",[],"C:\\Front\\google-forms\\src\\app\\lib.js",[],"C:\\Front\\google-forms\\src\\app\\hooks\\useOnClickOutside.js",[],"C:\\Front\\google-forms\\src\\app\\features\\question\\questionTypeRender.js",[],"C:\\Front\\google-forms\\src\\app\\features\\question\\questionSwitch.js",[],"C:\\Front\\google-forms\\src\\app\\features\\question\\questionTypeSelect.js",["108","109","110"],"C:\\Front\\google-forms\\src\\app\\features\\question\\questionTypeRange.js",["111"],"C:\\Front\\google-forms\\src\\app\\features\\question\\questionTypeText.js",[],"C:\\Front\\google-forms\\src\\app\\components\\Select.js",[],"C:\\Front\\google-forms\\src\\app\\components\\Option.js",[],"C:\\Front\\google-forms\\src\\app\\assets\\icons.js",[],"C:\\Front\\google-forms\\src\\app\\features\\question\\questionTypeSelectItem.js",["112","113","114"],"C:\\Front\\google-forms\\src\\app\\hooks\\useSelectState.js",["115","116"],"import React, { useReducer, useCallback } from 'react'\r\nimport { nanoid } from 'nanoid'\r\n\r\nfunction stateReducer(state, action) {\r\n  switch (action.type) {\r\n    case 'create': {\r\n      return [...state, { value: `Вариант ${state.length + 1}`, id: nanoid() }]\r\n    }\r\n\r\n    case 'delete': {\r\n      console.log('delete')\r\n      return state.filter((item) => item.id !== action.id)\r\n    }\r\n\r\n    case 'edit': {\r\n      return state.map((item) => {\r\n        if (item.id === action.id) {\r\n          return { ...item, value: action.value }\r\n        }\r\n        return item\r\n      })\r\n    }\r\n    default:\r\n      break\r\n  }\r\n}\r\nconst initialState = [{ value: 'row 1', id: nanoid() }]\r\nexport function useSelectState(data = initialState) {\r\n  const [state, dispatch] = useReducer(stateReducer, data)\r\n\r\n  const addItem = () => dispatch({ type: 'create' })\r\n  const deleteItem = (id) => dispatch({ type: 'delete', id })\r\n  const editItem = (id, value) => dispatch({ type: 'edit', value, id })\r\n\r\n  return [state, addItem, deleteItem, editItem]\r\n}\r\n",["117","118"],"C:\\Front\\google-forms\\src\\app\\features\\view\\viewFormPage.js",[],"C:\\Front\\google-forms\\src\\app\\features\\view\\viewFormGrid.js",["119"],"/** @jsxImportSource @emotion/react */\r\nimport React from 'react'\r\nimport styled from '@emotion/styled'\r\n\r\nconst TD = styled.td`\r\n  height: 2.5em;\r\n  min-width: 48px;\r\n  padding: 0.25em;\r\n  text-align: center;\r\n  vertical-align: middle;\r\n  width: 120px;\r\n`\r\n\r\nexport default function ViewFormGrid({ columns, rows, type }) {\r\n  const tableSpace = [{ value: '&nbsp;' }, ...rows]\r\n  return (\r\n    <table css={{ borderCollapse: 'collapse' }}>\r\n      <tbody>\r\n        {rows.map((item, ind) => {\r\n          let head = null\r\n          if (ind === 0) {\r\n            head = (\r\n              <tr>\r\n                <TD>&nbsp;</TD>\r\n                {columns.map((column) => (\r\n                  <TD>{column.value}</TD>\r\n                ))}\r\n              </tr>\r\n            )\r\n          }\r\n          return (\r\n            <>\r\n              {head}\r\n              <tr\r\n                css={{\r\n                  backgroundColor: '#f8f9fa',\r\n                }}\r\n              >\r\n                <TD>{item.value}</TD>\r\n                {columns.map((column) => (\r\n                  <TD>\r\n                    <input type={type} name={item.value} />\r\n                  </TD>\r\n                ))}\r\n              </tr>\r\n            </>\r\n          )\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n","C:\\Front\\google-forms\\src\\app\\features\\question\\questionHead.js",["120","121","122","123"],"/** @jsxImportSource @emotion/react */\r\n\r\nimport React, { useState, useContext } from 'react'\r\nimport { ContextEditMod } from '../../components/Container'\r\nimport { TextareaGrey } from '../../lib'\r\nimport { Input, ContainerField, EditStripeInput } from '../../lib'\r\n\r\nexport default function questionHead({ changeTitle, edit }) {\r\n  // const edit = useContext(ContextEditMod)\r\n  const handleChange = (e) => {\r\n    changeTitle(e.target.value)\r\n  }\r\n  return (\r\n    <ContainerField>\r\n      <Input\r\n        css={{\r\n          backgroundColor: edit ? '#f8f9fa' : 'transparent',\r\n          fontSize: '16px',\r\n          padding: '16px',\r\n          boxSizing: 'border-box',\r\n          '&:hover': { backgroundColor: edit ? '#f1f3f4' : 'transparent' },\r\n        }}\r\n        placeholder='вопрос'\r\n        onChange={handleChange}\r\n      />\r\n\r\n      {edit ? <EditStripeInput /> : null}\r\n    </ContainerField>\r\n  )\r\n}\r\n","C:\\Front\\google-forms\\src\\app\\components\\Header.js",["124","125","126","127","128"],"/** @jsxImportSource @emotion/react */\r\nimport { jsx } from '@emotion/react'\r\nimport React, { useEffect, useState, useRef } from 'react'\r\nimport { useEditMod } from './Container'\r\nimport Container from './Container'\r\nimport Wrapper from './Wrapper'\r\nimport { Textarea, ContainerField, EditStripeInput } from '../lib'\r\n\r\nconst defaultState = {\r\n  title: 'Новая форма',\r\n  desc: 'Описание',\r\n}\r\n\r\nexport default function Header({\r\n  edit,\r\n  changeStateHeader,\r\n  data = defaultState,\r\n}) {\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target\r\n    changeStateHeader(name, value)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Wrapper>\r\n        <Container>\r\n          <form>\r\n            <ContainerField>\r\n              <Textarea\r\n                spellCheck='false'\r\n                value={data.title}\r\n                onChange={handleChange}\r\n                name='title'\r\n                onFocus={(e) => e.target.select()}\r\n              />\r\n              {edit ? <EditStripeInput /> : null}\r\n            </ContainerField>\r\n\r\n            <ContainerField>\r\n              <Textarea\r\n                spellCheck='true'\r\n                onChange={handleChange}\r\n                name='desc'\r\n                value={data.desc}\r\n                onFocus={(e) => e.target.select()}\r\n              />\r\n              {edit ? <EditStripeInput /> : null}\r\n            </ContainerField>\r\n          </form>\r\n        </Container>\r\n      </Wrapper>\r\n    </>\r\n  )\r\n}\r\n","C:\\Front\\google-forms\\src\\app\\components\\Container.js",["129","130","131"],"C:\\Front\\google-forms\\src\\app\\components\\Wrapper.js",[],"C:\\Front\\google-forms\\src\\app\\features\\question\\questionList.js",[],{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","severity":1,"message":"137","line":1,"column":10,"nodeType":"138","messageId":"139","endLine":1,"endColumn":18},{"ruleId":"136","severity":1,"message":"140","line":2,"column":10,"nodeType":"138","messageId":"139","endLine":2,"endColumn":13},{"ruleId":"136","severity":1,"message":"141","line":6,"column":10,"nodeType":"138","messageId":"139","endLine":6,"endColumn":24},{"ruleId":"136","severity":1,"message":"142","line":7,"column":26,"nodeType":"138","messageId":"139","endLine":7,"endColumn":32},{"ruleId":"136","severity":1,"message":"143","line":5,"column":10,"nodeType":"138","messageId":"139","endLine":5,"endColumn":16},{"ruleId":"136","severity":1,"message":"140","line":2,"column":10,"nodeType":"138","messageId":"139","endLine":2,"endColumn":13},{"ruleId":"136","severity":1,"message":"144","line":6,"column":8,"nodeType":"138","messageId":"139","endLine":6,"endColumn":18},{"ruleId":"136","severity":1,"message":"145","line":7,"column":8,"nodeType":"138","messageId":"139","endLine":7,"endColumn":18},{"ruleId":"136","severity":1,"message":"146","line":1,"column":8,"nodeType":"138","messageId":"139","endLine":1,"endColumn":13},{"ruleId":"136","severity":1,"message":"147","line":1,"column":29,"nodeType":"138","messageId":"139","endLine":1,"endColumn":40},{"ruleId":"132","replacedBy":"148"},{"ruleId":"134","replacedBy":"149"},{"ruleId":"136","severity":1,"message":"150","line":15,"column":9,"nodeType":"138","messageId":"139","endLine":15,"endColumn":19},{"ruleId":"136","severity":1,"message":"137","line":3,"column":17,"nodeType":"138","messageId":"139","endLine":3,"endColumn":25},{"ruleId":"136","severity":1,"message":"151","line":3,"column":27,"nodeType":"138","messageId":"139","endLine":3,"endColumn":37},{"ruleId":"136","severity":1,"message":"152","line":4,"column":10,"nodeType":"138","messageId":"139","endLine":4,"endColumn":24},{"ruleId":"136","severity":1,"message":"153","line":5,"column":10,"nodeType":"138","messageId":"139","endLine":5,"endColumn":22},{"ruleId":"136","severity":1,"message":"140","line":2,"column":10,"nodeType":"138","messageId":"139","endLine":2,"endColumn":13},{"ruleId":"136","severity":1,"message":"154","line":3,"column":17,"nodeType":"138","messageId":"139","endLine":3,"endColumn":26},{"ruleId":"136","severity":1,"message":"137","line":3,"column":28,"nodeType":"138","messageId":"139","endLine":3,"endColumn":36},{"ruleId":"136","severity":1,"message":"155","line":3,"column":38,"nodeType":"138","messageId":"139","endLine":3,"endColumn":44},{"ruleId":"136","severity":1,"message":"156","line":4,"column":10,"nodeType":"138","messageId":"139","endLine":4,"endColumn":20},{"ruleId":"136","severity":1,"message":"137","line":2,"column":17,"nodeType":"138","messageId":"139","endLine":2,"endColumn":25},{"ruleId":"136","severity":1,"message":"155","line":2,"column":27,"nodeType":"138","messageId":"139","endLine":2,"endColumn":33},{"ruleId":"136","severity":1,"message":"157","line":3,"column":10,"nodeType":"138","messageId":"139","endLine":3,"endColumn":27},"no-native-reassign",["158"],"no-negated-in-lhs",["159"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'jsx' is defined but never used.","'useSelectState' is defined but never used.","'Button' is defined but never used.","'nanoid' is defined but never used.","'IconButton' is defined but never used.","'DeleteIcon' is defined but never used.","'React' is defined but never used.","'useCallback' is defined but never used.",["158"],["159"],"'tableSpace' is assigned a value but never used.","'useContext' is defined but never used.","'ContextEditMod' is defined but never used.","'TextareaGrey' is defined but never used.","'useEffect' is defined but never used.","'useRef' is defined but never used.","'useEditMod' is defined but never used.","'useOnClickOutside' is defined but never used.","no-global-assign","no-unsafe-negation"]